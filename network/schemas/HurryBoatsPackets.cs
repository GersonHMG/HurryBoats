// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace HurryBoatsPackets
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct PrepareGame : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static PrepareGame GetRootAsPrepareGame(ByteBuffer _bb) { return GetRootAsPrepareGame(_bb, new PrepareGame()); }
  public static PrepareGame GetRootAsPrepareGame(ByteBuffer _bb, PrepareGame obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public PrepareGame __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Seed { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<HurryBoatsPackets.PrepareGame> CreatePrepareGame(FlatBufferBuilder builder,
      int seed = 0) {
    builder.StartTable(1);
    PrepareGame.AddSeed(builder, seed);
    return PrepareGame.EndPrepareGame(builder);
  }

  public static void StartPrepareGame(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddSeed(FlatBufferBuilder builder, int seed) { builder.AddInt(0, seed, 0); }
  public static Offset<HurryBoatsPackets.PrepareGame> EndPrepareGame(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<HurryBoatsPackets.PrepareGame>(o);
  }
};


}
