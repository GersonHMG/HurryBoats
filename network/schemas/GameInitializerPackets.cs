// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace GameInitializerPackets
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct PlayerID : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static PlayerID GetRootAsPlayerID(ByteBuffer _bb) { return GetRootAsPlayerID(_bb, new PlayerID()); }
  public static PlayerID GetRootAsPlayerID(ByteBuffer _bb, PlayerID obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public PlayerID __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<GameInitializerPackets.PlayerID> CreatePlayerID(FlatBufferBuilder builder,
      ulong id = 0) {
    builder.StartTable(1);
    PlayerID.AddId(builder, id);
    return PlayerID.EndPlayerID(builder);
  }

  public static void StartPlayerID(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddId(FlatBufferBuilder builder, ulong id) { builder.AddUlong(0, id, 0); }
  public static Offset<GameInitializerPackets.PlayerID> EndPlayerID(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GameInitializerPackets.PlayerID>(o);
  }
};


}
